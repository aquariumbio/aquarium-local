# Base docker-compose file for aquarium
#
# Defines services for Aquarium, Krill, database, and S3.  Uses Docker network
# address translation, and containers for MySQL, and the Minio S3 server.
#
# Initializes the database the first time MySQL is run from the database dump
# in data/mysql_init/dump.sql. If you want to use an alternative, replace this
# file.
#
# To reininitialize the database with the original or an alternative dump file,
# remove the data/db directory with
#
#   sudo rm -rf data/db/*
#
# before running `docker-compose up`

# set environment variable EMAIL_SERVICE to AWS to use AWS SES

version: "3.5"
services:
  app:
    image: bjkeller/aquarium:2.7.1
    command: ["production"]
    environment:
      DB_NAME: production
      DB_USER: aquarium
      DB_PASSWORD: aSecretAquarium
      RAILS_ENV: production
      RACK_ENV: production
      S3_ACCESS_KEY_ID: aquarium_minio
      S3_SECRET_ACCESS_KEY: KUNAzqrNifmM6GwNVZ8IP7dxZAkYjhnwc0bfdz0W
      TZ: America/Los_Angeles
    volumes:
      - public:/aquarium/public
      - logs:/aquarium/log
      - shared:/aquarium/shared
    networks:
      - aquarium_net
    expose:
      - "3000"
    depends_on:
      - db
      - s3
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.route_localnet=1

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: production
      MYSQL_USER: aquarium
      MYSQL_PASSWORD: aSecretAquarium
      MYSQL_ROOT_PASSWORD: aSecretAquarium
      TZ: America/Los_Angeles
    volumes:
      - ./data/db:/var/lib/mysql
      - ./data/mysql_init/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - aquarium_net

  krill:
    image: bjkeller/aquarium:2.7.1
    command: ["krill", "production"]
    networks:
      - aquarium_net
    expose:
      - "3500"
    environment:
      DB_NAME: production
      DB_USER: aquarium
      DB_PASSWORD: aSecretAquarium
      TZ: America/Los_Angeles
    depends_on:
      - db
      - app
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.route_localnet=1

  s3:
    image: minio/minio:latest
    volumes:
      - ./data/s3/data:/data
      - ./data/s3/config:/root/.minio
    command: server /data
    expose:
      - "9000"
    environment:
      MINIO_ACCESS_KEY: aquarium_minio
      MINIO_SECRET_KEY: KUNAzqrNifmM6GwNVZ8IP7dxZAkYjhnwc0bfdz0W
      MINIO_REGION: us-west-1
    networks:
      - aquarium_net

  createbucket:
    image: minio/mc:latest
    depends_on:
      - s3
    entrypoint: >
      /bin/sh -c "
      while ! nc -z s3 9000; do
        sleep 1;
      done;
      /usr/bin/mc config host add aqminio http://s3:9000 aquarium_minio KUNAzqrNifmM6GwNVZ8IP7dxZAkYjhnwc0bfdz0W;
      /usr/bin/mc mb --region us-west-1 -p aqminio/images;
      /usr/bin/mc policy set download aqminio/images;
      exit 0;
      "
    networks:
      - aquarium_net

  web:
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "9000:9000"
    networks:
      - aquarium_net
    depends_on:
      - app
      - s3
      - createbucket
    volumes:
      - public:/aquarium/public
      - logs:/aquarium/log
      - shared:/aquarium/shared
      - ./config/nginx.production.conf:/etc/nginx/conf.d/default.conf:ro

networks:
  aquarium_net:

volumes:
  public:
  logs:
  shared:
